version: 2.1

workflows:
  build_and_deploy:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/

      - gh-release:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/
      - gh-release-ish:
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              ignore: /.*/

jobs:
  build-and-test:
    docker:
      - image: cimg/go:1.18.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run tests
          command: |
            sudo apt install wget
            wget https://github.com/lwthiker/curl-impersonate/releases/download/v0.5.0/libcurl-impersonate-v0.5.0.x86_64-linux-gnu.tar.gz
            tar -xzvf libcurl-impersonate-v0.5.0.x86_64-linux-gnu.tar.gz
            export LD_PRELOAD=$(pwd)/libcurl-impersonate-chrome.so.4.7.0
            cd blb
            go test -v
            cd ..
            cd tests
            go test -v

  gh-release:
    docker:
      - image: cimg/go:1.18.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Ubuntu setup
          command: |
            sudo dpkg --add-architecture i386
            sudo apt update
            sudo apt install gcc-multilib libcurl4-openssl-dev:i386 libcurl4-openssl-dev
      - run:
          name: Linux Build
          command: bash .circleci/build.sh linux amd64 386
      - run:
          name: Github release
          command: bash .circleci/release.sh -delete linux amd64 386


  gh-release-ish:
    docker:
      - image: mattfly/ish316:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Linux Build
          command: |
            mkdir -p i686-musl/
            version=$(git describe --tags --abbrev=0)
            GOOS=linux GOARCH=386 CGO_ENABLED=1 go build -ldflags="-s -w -X 'main.Version=$version' -X 'main.BuildDate=$(date -u)'" -o "i686-musl/blackbeard"
      - run:
          name: Github release
          command: |
            zip i686-musl.zip i686-musl/blackbeard
            VERSION=$(git describe --tags --abbrev=0)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace ${VERSION} i686-musl.zip
